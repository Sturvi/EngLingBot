package com.example.englingbot.service.handlers;

import com.example.englingbot.BotEvent;
import com.example.englingbot.model.enums.UserStateEnum;
import com.example.englingbot.model.enums.WordListTypeEnum;
import com.example.englingbot.service.UserService;
import com.example.englingbot.service.UserWordListService;
import com.example.englingbot.service.enums.TextCommandsEnum;
import com.example.englingbot.service.sendmessage.SendMessageForUserFactory;
import jakarta.annotation.PostConstruct;
import org.springframework.stereotype.Component;

import java.util.HashMap;
import java.util.Map;
import java.util.function.Consumer;

@Component
class MessageHandler implements Handler {

    private final SendMessageForUserFactory sendMessageForUserFactory;
    private final UserService userService;
    private final UserWordListService userWordListService;

    private final Map<TextCommandsEnum, Consumer<BotEvent>> textCommandsHandler;

    MessageHandler(SendMessageForUserFactory sendMessageForUserFactory, UserService userService, UserWordListService userWordListService) {
        this.sendMessageForUserFactory = sendMessageForUserFactory;
        this.userService = userService;
        this.userWordListService = userWordListService;
        textCommandsHandler = new HashMap<>();
    }

    @Override
    public void handle(BotEvent botEvent) {
        TextCommandsEnum incomingCommand = TextCommandsEnum.fromString(botEvent.getText());

        var handlerMethod = textCommandsHandler.get(incomingCommand);
        handlerMethod.accept(botEvent);
    }

    @PostConstruct
    private void init() {
        textCommandsHandler.put(TextCommandsEnum.START, this::handleStartAndHelp);
        textCommandsHandler.put(TextCommandsEnum.HELP, this::handleStartAndHelp);
        textCommandsHandler.put(TextCommandsEnum.ANSWER, this::handleAnswer);
        textCommandsHandler.put(TextCommandsEnum.ADD_WORD, this::handleAddWord);
        textCommandsHandler.put(TextCommandsEnum.LEARN_WORD, this::handleLearnWord);
        textCommandsHandler.put(TextCommandsEnum.REPEAT_WORD, this::handleRepeatWord);
        textCommandsHandler.put(TextCommandsEnum.MIXED_MODE, this::handleMixedMode);
        textCommandsHandler.put(TextCommandsEnum.LIST_STUDY_WORDS, this::handleListStudyWords);
        textCommandsHandler.put(TextCommandsEnum.LIST_REPETITION_WORDS, this::handleListRepetitionWords);
        textCommandsHandler.put(TextCommandsEnum.ADD_RANDOM_WORDS, this::handleAddRandomWords);
        textCommandsHandler.put(TextCommandsEnum.STATISTIC, this::handleStatistic);
        textCommandsHandler.put(TextCommandsEnum.DELETE, this::handleDelete);
        textCommandsHandler.put(null, this::handleDefault);
    }

    private void handleDefault(BotEvent botEvent) {
    }

    private void handleDelete(BotEvent botEvent) {

    }

    private void handleStatistic(BotEvent botEvent) {

    }

    private void handleAddRandomWords(BotEvent botEvent) {

    }

    private void handleListRepetitionWords(BotEvent botEvent) {

    }

    private void handleListStudyWords(BotEvent botEvent) {

    }

    private void handleMixedMode(BotEvent botEvent) {

    }

    private void handleRepeatWord(BotEvent botEvent) {
    }


    private void handleLearnWord(BotEvent botEvent) {
        var messageSender = sendMessageForUserFactory.createMessageSender();
        var user = userService.getUserEntityFromDataBase(botEvent);
        var userWord = userWordListService.getRandomUserWordList(user, WordListTypeEnum.LEARNING);

        if (userWord == null) {
            messageSender.sendMessage(botEvent.getId(), "–£ –≤–∞—Å –Ω–µ—Ç —Å–ª–æ–≤ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, " +
                    "–¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞, –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –Ω–∞—à–∏–º –±–∞–Ω–∫–æ–º —Å–ª–æ–≤.");
        } else {
            //–ù–ê–ü–ò–°–ê–¢–¨ –ú–ï–¢–û–î–´ –î–õ–Ø –†–ê–ë–û–¢–´ –° –ü–†–û–ò–ó–ù–û–®–ï–ù–ò–Ø–ú–ò
            String messageText = userWordListService.getUserWordListString(userWord);
            messageSender.sendMessage(botEvent.getId(), messageText);
        }
    }

    private void handleAddWord(BotEvent botEvent) {
        userService.changeUserState(UserStateEnum.ADD_MENU, botEvent);
        sendMessageForUserFactory
                .createMessageSender()
                .sendMessage(botEvent.getId(), """
                        –ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–≤–æ—é –∫–æ–ª–ª–µ–∫—Ü–∏—é.\s

                        –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª–æ–≤, –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏—Ö –ø–æ –æ—á–µ—Ä–µ–¥–∏.

                        –ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–∞–∫–∂–µ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏—è

                        –£—á—Ç–∏—Ç–µ, —á—Ç–æ —Å–ª–æ–≤–∞ –ø–µ—Ä–µ–≤–æ–¥—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, —Å –ø–æ–º–æ—â—å—é —Å–µ—Ä–≤–∏—Å–æ–≤ –æ–Ω–ª–∞–π–Ω –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ –Ω–∏–∫–∞–∫ –Ω–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏. –ü–æ—ç—Ç–æ–º—É –¥–∞–∂–µ –ø—Ä–∏ –Ω–µ–±–æ–ª—å—à–∏—Ö –æ—à–∏–±–∫–∞—Ö, –ø–µ—Ä–µ–≤–æ–¥ —Ç–∞–∫–∂–µ –±—É–¥–µ—Ç –æ—à–∏–±–æ—á–Ω—ã–π.""");

    }

    private void handleAnswer(BotEvent botEvent) {
        userService.changeUserState(UserStateEnum.ANSWER, botEvent);
        sendMessageForUserFactory
                .createMessageSender()
                .sendMessage(botEvent.getId(), "–ü—Ä–∏—à–ª–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å. \n\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è");
    }


    private void handleStartAndHelp(BotEvent botEvent) {
        String startAndHelpMessage = """
                –ü—Ä–∏–≤–µ—Ç! –Ø - Word Learning Bot, –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —É—á–∏—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞. –í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Ñ—É–Ω–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:

                –ö–æ–º–∞–Ω–¥—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–∑ –º–µ–Ω—é:

                /start - –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º –∏ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
                /answer - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å –æ —è–∑—ã–∫–µ –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç.
                /help - –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ.
                /statistic - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑—É—á–µ–Ω–∏—è —Å–ª–æ–≤.
                /delete - —É–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ –∏–∑ –≤–∞—à–µ–≥–æ —Å–ª–æ–≤–∞—Ä—è.

                –ö–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞:

                üìí –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞ - –¥–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞ –∏–ª–∏ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏—è –≤ –≤–∞—à —Å–ª–æ–≤–∞—Ä—å.
                üë®üèª‚Äçüéì –£—á–∏—Ç—å —Å–ª–æ–≤–∞ - –Ω–∞—á–∞—Ç—å –∏–∑—É—á–∞—Ç—å –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ –≤–∞—à–µ–≥–æ —Å–ª–æ–≤–∞—Ä—è.
                üîÑ –ü–æ–≤—Ç–æ—Ä—è—Ç—å —Å–ª–æ–≤–∞ - –ø–æ–≤—Ç–æ—Ä—è—Ç—å –∏–∑—É—á–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–∑ –≤–∞—à–µ–≥–æ —Å–ª–æ–≤–∞—Ä—è.
                üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º - —Ä–µ–∂–∏–º –∏–∑—É—á–µ–Ω–∏—è –∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Å–ª–æ–≤ –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
                üìì –°–ø–∏—Å–æ–∫ –∏–∑—É—á–∞–µ–º—ã—Ö —Å–ª–æ–≤ - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∏–∑—É—á–∞–µ—Ç–µ.
                üìì –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–∏ - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø–æ–≤—Ç–æ—Ä—è–µ—Ç–µ.
                üìñ –î–æ–±–∞–≤–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–µ —Å–ª–æ–≤–∞ - –¥–æ–±–∞–≤–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–µ —Å–ª–æ–≤–∞ –≤ –≤–∞—à —Å–ª–æ–≤–∞—Ä—å.
                –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è!

                –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –∂–∞–ª–æ–±—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: @SturviBots
                """;
        var messageSender = sendMessageForUserFactory.createMessageSender();
        messageSender.sendMessage(botEvent.getId(), startAndHelpMessage);
    }
}
